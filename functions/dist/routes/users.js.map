{"version":3,"sources":["../../../server/routes/users.js"],"names":["router","get","req","res","Repository","getAll","User","response","status","statusCode","json","id","params","getById","post","create","body","validateUserFields","put","update","delete","remove"],"mappings":";;;;;;AAAA;;;;AAGA;;;;AAEA;;;;AAGA;;;;AACA;;;;;;AAPA,IAAMA,SAAS,wBAAf;;AAKA;;;AAIA;AACA;AACA;AACAA,OAAOC,GAAP,CAAW,GAAX;AAAA,qEAAgB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOC,qBAAWC,MAAX,CAAkBC,cAAlB,CADP;;AAAA;AACVC,oBADU;;AAEdJ,gBAAIK,MAAJ,CAAWD,SAASE,UAApB,EAAgCC,IAAhC,CAAqCH,QAArC;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;;AAKA;AACA;AACA;AACAP,OAAOC,GAAP,CAAW,MAAX;AAAA,sEAAmB,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACXQ,cADW,GACNT,IAAIU,MAAJ,CAAWD,EADL;AAAA;AAAA,mBAEIP,qBAAWS,OAAX,CAAmBP,cAAnB,EAAyBK,EAAzB,CAFJ;;AAAA;AAEbJ,oBAFa;;AAGjBJ,gBAAIK,MAAJ,CAAWD,SAASE,UAApB,EAAgCC,IAAhC,CAAqCH,QAArC;;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;AAMA;AACA;AACA;AACAP,OAAOc,IAAP,CAAY,GAAZ;AAAA,sEAAiB,kBAAOZ,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACMC,qBAAWW,MAAX,CAAkBT,cAAlB,EAAwBJ,IAAIc,IAA5B,EAAkCC,wBAAlC,CADN;;AAAA;AACXV,oBADW;AAAA,8CAERJ,IAAIK,MAAJ,CAAWD,SAASE,UAApB,EAAgCC,IAAhC,CAAqCH,QAArC,CAFQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;AAKA;AACA;AACA;AACAP,OAAOkB,GAAP,CAAW,MAAX;AAAA,sEAAmB,kBAAOhB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACXQ,cADW,GACNT,IAAIU,MAAJ,CAAWD,EADL;AAAA;AAAA,mBAEIP,qBAAWe,MAAX,CACnBb,cADmB,EAEnBK,EAFmB,EAGnBT,IAAIc,IAHe,EAInBC,wBAJmB,CAFJ;;AAAA;AAEbV,oBAFa;AAAA,8CAQVJ,IAAIK,MAAJ,CAAWD,SAASE,UAApB,EAAgCC,IAAhC,CAAqCH,QAArC,CARU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;AAWA;AACA;AACA;AACAP,OAAOoB,MAAP,CAAc,MAAd;AAAA,sEAAsB,kBAAOlB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBQ,cADgB,GACXT,IAAIU,MAAJ,CAAWD,EADA;AAAA;AAAA,mBAECP,qBAAWiB,MAAX,CAAkBf,cAAlB,EAAwBK,EAAxB,CAFD;;AAAA;AAEhBJ,oBAFgB;AAAA,8CAGbJ,IAAIK,MAAJ,CAAWD,SAASE,UAApB,EAAgCC,IAAhC,CAAqCH,QAArC,CAHa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;;kBAMeP,M","file":"users.js","sourcesContent":["import express from \"express\";\r\n\r\nconst router = express();\r\nimport Repository from \"./../services/repository\";\r\n\r\nimport ApiResponse from \"../models/ApiResponse\";\r\n\r\n//import models\r\nimport User from \"../models/User\";\r\nimport { validateUserFields } from \"../validations/user\";\r\n\r\n// @route   GET api/users\r\n// @desc    Get Users\r\n// @access  Public\r\nrouter.get(\"/\", async (req, res) => {\r\n  let response = await Repository.getAll(User);\r\n  res.status(response.statusCode).json(response);\r\n});\r\n\r\n// @route   GET api/users/:id\r\n// @desc    Get User by id\r\n// @access  Public\r\nrouter.get(\"/:id\", async (req, res) => {\r\n  const id = req.params.id;\r\n  let response = await Repository.getById(User, id);\r\n  res.status(response.statusCode).json(response);\r\n});\r\n\r\n// @route   POST api/users\r\n// @desc    Create User\r\n// @access  Private\r\nrouter.post(\"/\", async (req, res) => {\r\n  let response = await Repository.create(User, req.body, validateUserFields);\r\n  return res.status(response.statusCode).json(response);\r\n});\r\n\r\n// @route   PUT api/users/:id\r\n// @desc    Update User by id\r\n// @access  Public\r\nrouter.put(\"/:id\", async (req, res) => {\r\n  const id = req.params.id;\r\n  let response = await Repository.update(\r\n    User,\r\n    id,\r\n    req.body,\r\n    validateUserFields\r\n  );\r\n  return res.status(response.statusCode).json(response);\r\n});\r\n\r\n// @route   DELETE api/users/:id\r\n// @desc    Delete User by id\r\n// @access  Public\r\nrouter.delete(\"/:id\", async (req, res) => {\r\n  let id = req.params.id;\r\n  let response = await Repository.remove(User, id);\r\n  return res.status(response.statusCode).json(response);\r\n});\r\n\r\nexport default router;\r\n"]}