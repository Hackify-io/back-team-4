{"version":3,"sources":["../../../server/validations/foo.js"],"names":["validateFooFields","errors","data","key","value","Validator","isLength","min","max","isEmpty","isValid"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEO,IAAMA,gDAAoB,SAApBA,iBAAoB,OAAQ;AACvC,MAAIC,SAAS,EAAb;AACA;AACAC,OAAKC,GAAL,GAAW,yBAAWD,KAAKC,GAAhB,CAAX;AACAD,OAAKE,KAAL,GAAa,yBAAWF,KAAKE,KAAhB,CAAb;;AAEA,MAAI,CAACC,oBAAUC,QAAV,CAAmBJ,KAAKC,GAAxB,EAA6B,EAAEI,KAAK,CAAP,EAAUC,KAAK,EAAf,EAA7B,CAAL,EAAwD;AACtDP,WAAOE,GAAP,GAAa,yCAAb;AACD;;AAED,MAAIE,oBAAUI,OAAV,CAAkBP,KAAKC,GAAvB,CAAJ,EAAiC;AAC/BF,WAAOE,GAAP,GAAa,uBAAb;AACD;;AAED,SAAO;AACLF,kBADK;AAELS,aAAS,sBAAQT,MAAR;AAFJ,GAAP;AAID,CAlBM","file":"foo.js","sourcesContent":["import Validator from 'validator';\r\nimport { isEmpty, isRequired } from './is-empty';\r\n\r\nexport const validateFooFields = data => {\r\n  let errors = {};\r\n  //If the values are null set to empty string\r\n  data.key = isRequired(data.key);\r\n  data.value = isRequired(data.value);\r\n\r\n  if (!Validator.isLength(data.key, { min: 3, max: 10 })) {\r\n    errors.key = 'key must be between 3 and 10 characters';\r\n  }\r\n\r\n  if (Validator.isEmpty(data.key)) {\r\n    errors.key = 'key field is required';\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors)\r\n  };\r\n};\r\n"]}