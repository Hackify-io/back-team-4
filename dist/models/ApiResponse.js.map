{"version":3,"sources":["../../server/models/ApiResponse.js"],"names":["ApiResponse","props","statusCode","errorMessage","result","fields","errors","isSuccess","description","key","value","Object","setResponse","err","urlParameterName","ValidationError"],"mappings":";;;;;;;;AAAA;;;;;;IAEMA,W;AACJ,uBAAYC,KAAZ,EAAmB;AAAA;;AACjB,SAAKC,UAAL,GAAkBD,QAAQA,MAAMC,UAAd,GAA2B,IAA7C;AACA,SAAKC,YAAL,GAAoBF,QAAQA,MAAME,YAAd,GAA6B,IAAjD;AACA,SAAKC,MAAL,GAAcH,QAAQA,MAAMG,MAAd,GAAuB,IAArC;AACA,SAAKC,MAAL,GAAcJ,QAAQA,MAAMK,MAAd,GAAuB,IAArC;AACA,SAAKC,SAAL,GAAiBN,QAAQA,MAAMM,SAAd,GAA0B,IAA3C;AACA,SAAKC,WAAL,GAAmBP,QAAQA,MAAMO,WAAd,GAA4B,IAA/C;AACD;;;;uCAEkBC,G,EAAKC,K,EAAO;AAC7B,UAAI,KAAKJ,MAAL,KAAgB,IAApB,EAA0B,KAAKA,MAAL,GAAc,IAAIK,MAAJ,EAAd;AAC1B,WAAKL,MAAL,CAAYG,GAAZ,IAAmBC,KAAnB;AACD;;;gCAEWT,K,EAAO;AACjB,UAAI,CAAC,sBAAQA,KAAR,CAAL,EAAqB;AACnB,YAAI,CAAC,sBAAQA,MAAMC,UAAd,CAAL,EAAgC,KAAKA,UAAL,GAAkBD,MAAMC,UAAxB;AAChC,YAAI,CAAC,sBAAQD,MAAME,YAAd,CAAL,EAAkC,KAAKA,YAAL,GAAoBF,MAAME,YAA1B;AAClC,YAAI,CAAC,sBAAQF,MAAMG,MAAd,CAAL,EAA4B,KAAKA,MAAL,GAAcH,MAAMG,MAApB;AAC5B,YAAI,CAAC,sBAAQH,MAAMI,MAAd,CAAL,EAA4B,KAAKA,MAAL,GAAcJ,MAAMI,MAApB;AAC5B,YAAI,CAAC,sBAAQJ,MAAMM,SAAd,CAAL,EAA+B,KAAKA,SAAL,GAAiBN,MAAMM,SAAvB;AAC/B,YAAI,CAAC,sBAAQN,MAAMO,WAAd,CAAL,EAAiC,KAAKA,WAAL,GAAmBP,MAAMO,WAAzB;AAClC;AACF;;;;0FAEQJ,M;;;;;AACP,qBAAKQ,WAAL,CAAiB;AACfV,8BAAY,GADG;AAEfM,+BAAa,SAFE;AAGfD,6BAAW,IAHI;AAIfH;AAJe,iBAAjB;;;;;;;;;;;;;;;;;;;;;;;;AASA,qBAAKQ,WAAL,CAAiB;AACfV,8BAAY,GADG;AAEfM,+BAAa,SAFE;AAGfD,6BAAW;AAHI,iBAAjB;;;;;;;;;;;;;;;;;;;;;;;;AAQA,qBAAKK,WAAL,CAAiB;AACfV,8BAAY,GADG;AAEfC,gCAAc,cAFC;AAGfI,6BAAW;AAHI,iBAAjB;;;;;;;;;;;;;;;;;;;4FAOwBM,G;;;;;AACxB,qBAAKD,WAAL,CAAiB;AACfV,8BAAY,GADG;AAEfC,gCAAc,uBAFC;AAGfI,6BAAW,KAHI;AAIfC,+BAAaK;AAJE,iBAAjB;;;;;;;;;;;;;;;;;;;4FAQoBP,M;;;;;AACpB,qBAAKM,WAAL,CAAiB;AACfV,8BAAY,GADG;AAEfG,0BAAQC,MAFO;AAGfH,gCAAc,kBAHC;AAIfI,6BAAW;AAJI,iBAAjB;;;;;;;;;;;;;;;;;;;4FAQwBO,gB;;;;;;AAClBR,sB,GAAS,IAAIK,MAAJ,E;;AACfL,uBAAOQ,gBAAP,IAA2B,uBAA3B;;uBACMC,gBAAgBT,MAAhB,C;;;;;;;;;;;;;;;;;;;;;kBAIKN,W","file":"ApiResponse.js","sourcesContent":["import { isEmpty, isRequired } from \"../validations/is-empty\";\r\n\r\nclass ApiResponse {\r\n  constructor(props) {\r\n    this.statusCode = props ? props.statusCode : null;\r\n    this.errorMessage = props ? props.errorMessage : null;\r\n    this.result = props ? props.result : null;\r\n    this.fields = props ? props.errors : null;\r\n    this.isSuccess = props ? props.isSuccess : null;\r\n    this.description = props ? props.description : null;\r\n  }\r\n\r\n  addValidationError(key, value) {\r\n    if (this.errors === null) this.errors = new Object();\r\n    this.errors[key] = value;\r\n  }\r\n\r\n  setResponse(props) {\r\n    if (!isEmpty(props)) {\r\n      if (!isEmpty(props.statusCode)) this.statusCode = props.statusCode;\r\n      if (!isEmpty(props.errorMessage)) this.errorMessage = props.errorMessage;\r\n      if (!isEmpty(props.result)) this.result = props.result;\r\n      if (!isEmpty(props.fields)) this.fields = props.fields;\r\n      if (!isEmpty(props.isSuccess)) this.isSuccess = props.isSuccess;\r\n      if (!isEmpty(props.description)) this.description = props.description;\r\n    }\r\n  }\r\n\r\n  async Ok(result) {\r\n    this.setResponse({\r\n      statusCode: 200,\r\n      description: \"Success\",\r\n      isSuccess: true,\r\n      result\r\n    });\r\n  }\r\n\r\n  async NoContent() {\r\n    this.setResponse({\r\n      statusCode: 204,\r\n      description: \"Success\",\r\n      isSuccess: true\r\n    });\r\n  }\r\n\r\n  async NotFound() {\r\n    this.setResponse({\r\n      statusCode: 404,\r\n      errorMessage: \"NO_RESOURCES\",\r\n      isSuccess: false\r\n    });\r\n  }\r\n\r\n  async InternalServerError(err) {\r\n    this.setResponse({\r\n      statusCode: 500,\r\n      errorMessage: \"INTERNAL_SERVER_ERROR\",\r\n      isSuccess: false,\r\n      description: err\r\n    });\r\n  }\r\n\r\n  async ValidationError(errors) {\r\n    this.setResponse({\r\n      statusCode: 422,\r\n      fields: errors,\r\n      errorMessage: \"VALIDATION_ERROR\",\r\n      isSuccess: false\r\n    });\r\n  }\r\n\r\n  async InvalidUrlParameter(urlParameterName) {\r\n    const errors = new Object();\r\n    errors[urlParameterName] = \"Invalid Url Parameter\";\r\n    await ValidationError(errors);\r\n  }\r\n}\r\n\r\nexport default ApiResponse;\r\n"]}